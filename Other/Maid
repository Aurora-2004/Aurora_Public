

local Maid = {}
local Connections = {}
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Player = Players.LocalPlayer

function Maid:TraceBack(...)
    local Developers = {"TehSilentX"}
    if RunService:IsStudio() or table.find(Developers, tostring(Players)) then
        warn("[Maid Service] :", ...)
    end
end

function Maid:Verify(Name)
    return Connections[Name]
end

function Maid:Register(Name, Callback)
    local ConnectionExists = self:Verify(Name)
    if ConnectionExists then
        return false, self:TraceBack(Name, "already exists")
    end
    Connections[Name] = Callback
    self:TraceBack(Name, "added to connections")
end

function Maid:DeRegister(Name)
    local Connection = self:Verify(Name)
    if not Connection then
        return false, self:TraceBack(Name, "not found")
    end
    
    if typeof(Connection) == "RBXScriptConnection" then
        Connection:Disconnect()
    end
    Connections[Name] = nil
    return true, self:TraceBack(name, "disconnected")
end

function Maid:ClearRegister()
    for _, Connection in next, Connections do
        self:DeRegister(Connection)
    end
    self:TraceBack("Cleared all connections")
end

return Maid
