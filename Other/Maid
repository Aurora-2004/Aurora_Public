
local maid = {}
local connections = {}
local players = game:GetService("Players")
local player = players.LocalPlayer
local runService = game:GetService("RunService")

function maid:traceBack(...)
    if runService:IsStudio() or tostring(player) == "TehSilentX" then
        warn("[Maid Service] :", ...)
    end
end

function maid:verify(name)
    return connections[name]
end

function maid:count()
    return #connections
end

function maid:register(name, callback)
    local connectionExists = self:verify(name)
    if connectionExists then
        return false, self:traceBack(name, "already exists")
    end
    connections[name] = callback
    self:traceBack(name, "added to connections")
end

function maid:deRegister(name)
    local connection = self:verify(name)
    if not connection then
        return false, self:traceBack(name, "not found")
    end
    
    if typeof(connection) == "RBXScriptConnection" then
        connection:Disconnect()
    end
    connections[name] = nil
    return true, self:traceBack(name, "disconnected")
end

function maid:clearRegister()
    for connection, callback in next, connections do
        self:deRegister(connection)
    end
    self:traceBack("cleared register")
end

return maid
